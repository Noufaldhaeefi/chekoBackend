version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: cheko-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-cheko}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    networks:
      - cheko-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "description=PostgreSQL database for Cheko Backend"

  cheko-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cheko-backend
    environment:
      # Spring Profiles
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-docker}
      
      # Database Configuration
      DATABASE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-cheko}
      DATABASE_USERNAME: ${POSTGRES_USER:-postgres}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      DATABASE_MAX_POOL_SIZE: ${DATABASE_MAX_POOL_SIZE:-20}
      DATABASE_MIN_IDLE: ${DATABASE_MIN_IDLE:-5}
      
      # Server Configuration
      SERVER_PORT: ${SERVER_PORT:-8080}
      SERVER_CONTEXT_PATH: ${SERVER_CONTEXT_PATH:-/}
      
      # Logging Configuration
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      WEB_LOG_LEVEL: ${WEB_LOG_LEVEL:-INFO}
      SQL_LOG_LEVEL: ${SQL_LOG_LEVEL:-WARN}
      LOG_FILE_PATH: ${LOG_FILE_PATH:-/var/log/cheko-backend/application.log}
      
      # JPA Configuration
      JPA_SHOW_SQL: ${JPA_SHOW_SQL:-false}
      JPA_FORMAT_SQL: ${JPA_FORMAT_SQL:-false}
      
      # Flyway Configuration
      FLYWAY_REPAIR: ${FLYWAY_REPAIR:-false}
      
      # Tomcat Configuration
      TOMCAT_MAX_THREADS: ${TOMCAT_MAX_THREADS:-200}
      TOMCAT_MIN_THREADS: ${TOMCAT_MIN_THREADS:-10}
      TOMCAT_ACCEPT_COUNT: ${TOMCAT_ACCEPT_COUNT:-100}
      TOMCAT_MAX_CONNECTIONS: ${TOMCAT_MAX_CONNECTIONS:-8192}
      
      # Swagger Configuration
      SWAGGER_ENABLED: ${SWAGGER_ENABLED:-true}
      
      # CORS Configuration
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:3001}
      
      # JVM Configuration
      JAVA_OPTS: ${JAVA_OPTS:--Xmx512m -Xms256m -XX:+UseG1GC}
      
    ports:
      - "${SERVER_PORT:-8080}:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - cheko-network
    restart: unless-stopped
    volumes:
      - ./logs:/var/log/cheko-backend
      - ./backups:/app/backups
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "description=Cheko Backend API with Swagger UI at http://localhost:${SERVER_PORT:-8080}/swagger-ui.html"
      - "version=1.0.0"
      - "maintainer=Cheko Team"

volumes:
  postgres_data:
    driver: local

networks:
  cheko-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16