# Production Environment Configuration

# Server configuration
server.port=${SERVER_PORT:8080}
server.servlet.context-path=${SERVER_CONTEXT_PATH:/}

# Database configuration (PostgreSQL) - production settings
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Production connection pool settings
spring.datasource.hikari.maximum-pool-size=${DATABASE_MAX_POOL_SIZE:20}
spring.datasource.hikari.minimum-idle=${DATABASE_MIN_IDLE:5}
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.leak-detection-threshold=60000

# JPA/Hibernate configuration - production optimized
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# Flyway configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.repair=false

# Logging configuration - production optimized
logging.level.com.cheko.backend=${LOG_LEVEL:INFO}
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# File logging for production
logging.file.name=${LOG_FILE_PATH:/var/log/cheko-backend/application.log}
logging.file.max-size=100MB
logging.file.max-history=30

# Swagger/OpenAPI Configuration - conditional based on environment
springdoc.api-docs.enabled=${SWAGGER_ENABLED:false}
springdoc.swagger-ui.enabled=${SWAGGER_ENABLED:false}
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=false
springdoc.swagger-ui.filter=true

# Tomcat Configuration for production
server.tomcat.max-http-header-size=1048576
server.tomcat.max-http-post-size=10485760
server.max-http-header-size=1048576
server.tomcat.threads.max=${TOMCAT_MAX_THREADS:200}
server.tomcat.threads.min-spare=${TOMCAT_MIN_THREADS:10}
server.tomcat.accept-count=${TOMCAT_ACCEPT_COUNT:100}
server.tomcat.max-connections=${TOMCAT_MAX_CONNECTIONS:8192}

# Actuator endpoints for monitoring
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.info.env.enabled=true
management.metrics.export.prometheus.enabled=true

# Security headers for production
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=strict

# CORS configuration for production
spring.web.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true
